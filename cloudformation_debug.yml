AWSTemplateFormatVersion: "2010-09-09"
Description: ""
Metadata: {}

Parameters:
    VpcId:
        Type: AWS::EC2::VPC::Id
        Description: Vpc Id

    InstanceKeyPair:
        Type: AWS::EC2::KeyPair::KeyName
        Description: KeyPair for EC2 Instances
    
    EcrImageName:
        Type: String
        Description: Container Image Name

    SubnetList:
        Type: List<AWS::EC2::Subnet::Id>
        Description: Select subnets for the scaling group

    RConPassword:
        Type: String
        Description: RCon Password

    ServerPassword:
        Type: String
        Description: Password for normal players

    WorkshopCollectionId:
        Type: String
        Description: Steam Workshop Collection Id
        Default: 2215505010

Mappings: {}

Conditions: {}

Resources:
    AutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            AutoScalingGroupName: Gmod_AlumLand_AutoScalingGroup
            VPCZoneIdentifier: !Ref SubnetList
            LaunchConfigurationName: !Ref LaunchConfiguration
            MaxSize: "1"
            MinSize: "1"
            Tags:
            -
                Key: Name
                PropagateAtLaunch: True
                Value: Gmod_AlumLand_Node

    LaunchConfiguration:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            IamInstanceProfile: !Ref InstanceProfile
            ImageId: ami-09b1109d40fc89d9e
            InstanceMonitoring: false
            InstanceType: t2.small
            KeyName: !Ref InstanceKeyPair
            SecurityGroups:
                - Ref: InstanceSecurityGroup
            UserData:
                Fn::Base64:
                    !Sub |
                        #!/bin/bash -ex
                        exec > /tmp/userdata.log 2>&1
                        echo ECS_CLUSTER=${EcsCluster} >> /etc/ecs/ecs.config
                        echo ECS_BACKEND_HOST= >> /etc/ecs/ecs.config;

                        #install the Docker volume plugin
                        docker plugin install rexray/ebs REXRAY_PREEMPT=true EBS_REGION=eu-west-2 --grant-all-permissions
                        #restart the ECS agent
                        sudo systemctl restart docker

    InstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            InstanceProfileName: Gmod_AlumLand_InstanceProfile
            Roles:
            - !Ref InstanceRole

    InstanceRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: Gmod_AlumLand_InstanceRole
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                - 
                    Effect: Allow
                    Principal:
                        Service: ec2.amazonaws.com
                    Action: sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AmazonEC2FullAccess
                - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
                - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

    InstanceSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupName: Gmod_AlumLand_SecurityGroup
            GroupDescription: EC2 Instance Security Group
            SecurityGroupIngress:
            - 
                IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 0.0.0.0/0
            - 
                IpProtocol: tcp
                FromPort: 27015
                ToPort: 27015
                CidrIp: 0.0.0.0/0
            - 
                IpProtocol: udp
                FromPort: 27015
                ToPort: 27015
                CidrIp: 0.0.0.0/0
            VpcId: !Ref VpcId

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            ContainerDefinitions:
            - 
                EntryPoint:
                    - tail 
                    - -f 
                    - /dev/null
                Environment:
                    - 
                        Name: SERVER_PASSWORD
                        Value: !Ref ServerPassword
                    - 
                        Name: RCON_PASSWORD
                        Value: !Ref RConPassword
                    - 
                        Name: WORKSHOP_COLLECTION_ID
                        Value: !Ref WorkshopCollectionId
                PortMappings:
                    - 
                        Protocol: tcp
                        HostPort: 27015
                        ContainerPort: 27015
                    - 
                        Protocol: udp
                        HostPort: 27015
                        ContainerPort: 27015
                Image: !Ref EcrImageName
                Name: Gmod_AlumLand_Container
                MountPoints:
                    - 
                        ContainerPath: /home/steam/gmodds
                        SourceVolume: gmod_data
            Memory: "1024"
            TaskRoleArn: !Ref TaskExecutionRole
            ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
            Volumes: 
                -
                    Name: gmod_data
                    DockerVolumeConfiguration:
                        Autoprovision: true
                        Scope: shared
                        Driver: rexray/ebs
                        DriverOpts:
                            Volumetype: gp2
                            Size: "20"

    TaskExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: Gmod_AlumLand_TaskExecutionRole
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: ecs-tasks.amazonaws.com
                      Action: sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

    EcsService:
        Type: AWS::ECS::Service
        Properties:
            Cluster: !Ref EcsCluster
            SchedulingStrategy: DAEMON
            ServiceName: Gmod_AlumLand_Service
            TaskDefinition: !Ref TaskDefinition

    EcsCluster:
        Type: AWS::ECS::Cluster
        Properties:
            ClusterName: GMod_Cluster

Outputs: {}
